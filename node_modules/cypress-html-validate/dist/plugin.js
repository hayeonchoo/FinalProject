"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.install = void 0;
const html_validate_1 = require("html-validate");
const deepmerge_1 = __importDefault(require("deepmerge"));
const config_1 = __importDefault(require("./config"));
const options_1 = __importDefault(require("./options"));
function install(
/* eslint-disable-next-line @typescript-eslint/ban-types --- should accept any function prototype */
on, userConfig, userOptions) {
    const config = deepmerge_1.default(config_1.default, userConfig || {});
    const htmlvalidate = new html_validate_1.HtmlValidate(config);
    Object.assign(options_1.default, userOptions);
    if (!Array.isArray(options_1.default.exclude)) {
        throw new Error(`Invalid cypress-html-validate configuration, "exclude" must be array, got ${typeof options_1.default.exclude}`);
    }
    if (!Array.isArray(options_1.default.include)) {
        throw new Error(`Invalid cypress-html-validate configuration, "include" must be array, got ${typeof options_1.default.include}`);
    }
    on("task", {
        htmlvalidate(source) {
            return htmlvalidate.validateString(source);
        },
        htmlvalidateOptions() {
            return options_1.default;
        },
    });
}
exports.install = install;
